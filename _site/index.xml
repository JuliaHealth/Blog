<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>The JuliaHealth Blog</title>
<link>https://juliahealth.org/JuliaHealthBlog/</link>
<atom:link href="https://juliahealth.org/JuliaHealthBlog/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.5.47</generator>
<lastBuildDate>Sat, 07 Sep 2024 04:00:00 GMT</lastBuildDate>
<item>
  <title>GSoC ’24: Developing Tooling for Observational Health Research in Julia</title>
  <dc:creator>Jay Sanjay Landge</dc:creator>
  <link>https://juliahealth.org/JuliaHealthBlog/posts/google-summer-of-code-fellows/gsoc-2024-fellows.html</link>
  <description><![CDATA[ 




<section id="hi-everyone" class="level1">
<h1>Hi Everyone! 👋</h1>
<p>I am Jay Sanjay, and I am pursuing a Bachelor’s degree in Computational Sciences and Engineering at the Indian Institute of Technology (IIT) in Hyderabad, India. Coming from a mathematics and data analysis background, I was initially introduced to Julia at my university lectures. Later, I delved more into the language and the JuliaHealth community - an intersection of Julia, Health Research, Data Sciences, and Informatics. Here, I met some of the great folks in JuliaHealth and I decided to take it on as a full-fledged summer project. In this blog, I will briefly describe what my project is and what I did as a part of it.</p>
<blockquote class="blockquote">
<p>If you want to know more about me, you can connect with me on <a href="https://www.linkedin.com/in/jay-landge-589439260/"><strong>LinkedIn</strong></a> and follow me on <a href="https://github.com/Jay-sanjay"><strong>GitHub</strong></a></p>
</blockquote>
</section>
<section id="background" class="level1">
<h1>Background</h1>
<section id="what-is-observational-health-research" class="level2">
<h2 class="anchored" data-anchor-id="what-is-observational-health-research">What Is Observational Health Research?</h2>
<p>Observational Health Research refers to studies that analyze real-world data (such as patient medical claims, electronic health records, etc.) to understand patient health. These studies often encompass a vast amount of data concerning patient care. An outstanding challenge here is that these datasets can become very complex and grow large enough to require advanced computing methods to process this information.</p>
</section>
<section id="what-are-patient-pathways" class="level2">
<h2 class="anchored" data-anchor-id="what-are-patient-pathways">What Are Patient Pathways?</h2>
<p>Patient pathways refer to the journey that patients with specific medical conditions undergo in terms of their treatment. This concept goes beyond simple drug uptake statistics and looks at the sequence of treatments patients receive over time, including first-line treatments and subsequent therapies. Understanding patient pathways is essential for analyzing treatment patterns, adherence to clinical guidelines, and the disbursement of drugs. To analyze patient pathways, one would typically use real-world data from sources such as electronic health records, claims data, and registries. However, barriers such as data interoperability and resource requirements have hindered the full utilization of real-world data for this purpose.</p>
<p>So to address these challenges we (the JuliaHealth organization and I) want to develop a set of tools to extract and analyze these patient pathways. These sets of tools are based on the Observational Medical Outcomes Partnership (OMOP) Common Data Model, which standardizes healthcare data to promote interoperability.</p>
</section>
</section>
<section id="project-description" class="level1">
<h1>Project Description</h1>
<p>As part of this project with JuliaHealth, I developed a new package called <a href="https://github.com/JuliaHealth/OMOPCDMPathways.jl"><strong>OMOPCDMPathways.jl</strong></a>. This package is designed for deployment in research projects, particularly those related to health and medical data analysis. This project takes much inspiration from the paper <a href="https://www.sciencedirect.com/science/article/pii/S016926072200462X?via%3Dihub"><em>TreatmentPatterns: An r package to facilitate the standardized development and analysis of treatment patterns across disease domains</em></a> <span class="citation" data-cites="markus2022treatmentpatterns">[1]</span> and explores the implementation of some of those ideas to develop new tools within the JuliaHealth Observational Health Subecosystem for exploring patient pathways. Additional new features and approaches were added and explored within this project. Additionally, I have authored a developer guide for the package, providing instructions on its use and contribution. This project provided me with hands-on experience in developing production-level code and exposed me to open-source software development practices. I had the opportunity to work in a team, under my mentors, and ensured the integration of the package with the rest of JuliaHealth, facilitating its adoption and usability within the community.</p>
</section>
<section id="project-goals" class="level1">
<h1>Project Goals</h1>
<p>As a part of the development, I was majorly engaged in crafting the following functionalities:</p>
<ol type="1">
<li><p>Selecting treatments of interest: The first decision that was made was to decide the time from which the desired treatments of interest should be included in the treatment pathway study. Here the <a href="https://github.com/JuliaHealth/OMOPCDMPathways.jl/issues/1">periodPriorToIndex</a> specifies the period (i.e.&nbsp;number of days) before the index date from which treatments should be included.</p></li>
<li><p>Find Treatment History of Patients: Create the <a href="https://github.com/JuliaHealth/OMOPCDMPathways.jl/issues/4">treatment history</a> of a patient based on target, event, and exit cohorts. Then filter patient events based on the start and end dates of the target cohort. Third, Calculate the duration of treatment eras and the gap between treatments.</p></li>
<li><p>Filters: Filter the treatment history based on the <a href="https://github.com/JuliaHealth/OMOPCDMPathways.jl/issues/5">minEraDuration</a> parameter and <a href="https://github.com/JuliaHealth/OMOPCDMPathways.jl/issues/2">EraCollapse</a> parameter.</p></li>
<li><p>Create a Continuous Integration and Continuous Development pipeline for the package.</p></li>
<li><p>Implement the combinationWindow function, which combines treatments with various overlapping strategies.</p></li>
</ol>
<p>Additionally, we had a few stretch goals which were:</p>
<ol type="1">
<li><p>Composing with JuliaStats Ecosystem</p></li>
<li><p>Novel Visualizations for Pathways</p></li>
</ol>
</section>
<section id="tasks" class="level1">
<h1>Tasks</h1>
<section id="setting-up-the-package-in-juliahealth-channel" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-package-in-juliahealth-channel">1. Setting Up the Package in JuliaHealth Channel</h2>
<p>Initially, there was no package as such for generating pathways, so I had to build it from scratch. First, I created the repository with the name <a href="https://github.com/JuliaHealth/OMOPCDMPathways.jl">OMOPCDMPathways.jl</a>. Once the repository was created, we needed to have a skeleton for a standard Julia repository. For this, we used the <a href="https://juliaci.github.io/PkgTemplates.jl/stable/user/">PkgTemplates.jl</a> this provided a basic skeleton for the repository that included - folders for test suites, documentation, src code files, GitHub files, README and LICENSE file, TOML and citation files. All this we can further edit and modify as per our work. By default, PkgTemplate.jl uses <a href="https://documenter.juliadocs.org/stable/">Documenter.jl</a> for the documentation part but as suggested and discussed with my mentor we decided to shift to <a href="https://luxdl.github.io/DocumenterVitepress.jl/dev/">DocumenterVitepress.jl</a> for the documentation part. However, we still faced some deployment issues in the new documentation due to a few mistakes in the <code>make.jl</code> file, thanks to <a href="https://github.com/asinghvi17">Anshul Singhvi</a> for helping fix the <a href="https://github.com/JuliaHealth/OMOPCDMPathways.jl/issues/15">Deployment issues with DocumenterVitepress</a>. With this, we were ready with the documentation set up and fully functional. After we had shifted to DocumenterVitepress the main task now was to host the documentation, this was done using Github-Actions, detailed steps for hosting are provided at <a href="https://documenter.juliadocs.org/stable/man/hosting/#Hosting-Documentation">this</a> page. Then we added the CodeCov to our package by triggering it via a dummy function and a corresponding test case for it. Also, the CI for the package was set up with it. And, now finally the repository was ready with test coverage, CI, and documentation fully functional repository ready. Here’s some snapshots of the documentation set-up:</p>
<p><img src="https://juliahealth.org/JuliaHealthBlog/posts/google-summer-of-code-fellows/image.png" class="img-fluid"></p>
<blockquote class="blockquote">
<p>Initial documentation with Documenter.jl</p>
</blockquote>
<p><img src="https://juliahealth.org/JuliaHealthBlog/posts/google-summer-of-code-fellows/img2.png" class="img-fluid"></p>
<blockquote class="blockquote">
<p>New documentation using DocumenterVitepress.jl</p>
</blockquote>
<p>So, as a part of it, I created this <a href="https://luxdl.github.io/DocumenterVitepress.jl/dev/documenter_to_vitepress_docs_example">documentation</a> which provides detailed steps for converting docs from Documenter to DocumenterVitepress.</p>
</section>
<section id="loading-the-postgresql-database" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-postgresql-database">2. Loading the PostgreSQL Database</h2>
<p>The main database we worked on/built analysis was the freely available OMOPCDM Database. The Database was formatted within a PostgreSQL database with <a href="https://www.devart.com/dbforge/postgresql/how-to-install-postgresql-on-linux/">installation instructions here</a> are some instructions on how to set up Postgres in a Linux machine. However, I was provided with some more extra synthetic data from my mentor for further testing of the functionalities. Being a very large database we had to strategically download it further, my mentor helped me in setting up the Postgres on my local machine. Once, the database was set up proper testing was performed on it to check if things were as expected. With this, we were done with the database setup as well and could finally dive into the actual code logic for the Pathways synthesis.</p>
</section>
<section id="testing-and-development-setup-on-my-local-computer" class="level2">
<h2 class="anchored" data-anchor-id="testing-and-development-setup-on-my-local-computer">3. Testing and Development setup on my local computer</h2>
<p>To get a proper environment for functionality creation and concurrent testing we required a proper testing setup so that we could test the new functions made at the same time. This was done using <a href="https://timholy.github.io/Revise.jl/stable/">Revise.jl</a>, which helps to keep Julia sessions running without frequent restarts when making changes to code. It allowed me to edit my code, update packages, or switch git branches during a session, with changes applied immediately in the next command. My mentor helped me set it up, added Revise.jl to the global Julia environment, also <a href="https://github.com/GunnarFarneback/PackageCompatUI.jl">PackageCompatUI</a> that provides a terminal text interface to the [compat] section of a Julia Project.toml file, and finally made a Julia script by the name “startup.jl” out of it. This script was then added to <code>/home/jay-sanjay/.julia/config/</code> path in my local computer.</p>
<p>Here is the sample for the startup.jl file:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PackageCompatUI</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">PkgTemplates</span></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Revise</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">###################################</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># HELPER FUNCTIONS</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">###################################</span></span>
<span id="cb1-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">template</span>()</span>
<span id="cb1-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Template</span>(;</span>
<span id="cb1-10">        user<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jay-sanjay"</span>,</span>
<span id="cb1-11">        dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"~/FOSS"</span>,</span>
<span id="cb1-12">        authors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jaysanjay &lt;jaysanjay@gmail.com&gt; and contributors"</span>,</span>
<span id="cb1-13">        julia<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">v"1.6"</span>,</span>
<span id="cb1-14">        plugins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb1-15">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProjectFile</span>(; version<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">v"0.0.1"</span>),</span>
<span id="cb1-16">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Git</span>(),</span>
<span id="cb1-17">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Readme</span>(),</span>
<span id="cb1-18">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">License</span>(; name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MIT"</span>),</span>
<span id="cb1-19">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GitHubActions</span>(; extra_versions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nightly"</span>]),</span>
<span id="cb1-20">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">TagBot</span>(),</span>
<span id="cb1-21">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Codecov</span>(),</span>
<span id="cb1-22">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Documenter</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{GitHubActions}</span>(),</span>
<span id="cb1-23">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Citation</span>(; readme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span>),</span>
<span id="cb1-24">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RegisterAction</span>(),</span>
<span id="cb1-25">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BlueStyleBadge</span>(),</span>
<span id="cb1-26">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Formatter</span>(;style <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb1-27">        ],</span>
<span id="cb1-28">    )</span>
<span id="cb1-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span></code></pre></div>
</section>
<section id="selecting-treatments-of-interest" class="level2">
<h2 class="anchored" data-anchor-id="selecting-treatments-of-interest">4. Selecting Treatments of Interest</h2>
<p>So, as a part of this, we used the previously mentioned research paper and discussion with the mentors we came up with logic for it. The first thing to do was to determine the moment in time from which selected treatments of interest should be included in the treatment pathway. The default is all treatments starting after the index date of the target cohort. For example, for a target cohort consisting of newly diagnosed patients, treatments after the moment of first diagnosis are included. However, it would also be desirable to include (some) treatments before the index date, for instance in case a specific disease diagnosis is only confirmed after initiating treatment. Therefore, periodPriorToIndex specifies the period (i.e.&nbsp;number of days) before the index date from which treatments should be included. We have created two dispatches for this function. After that proper testing and documentation are also added.</p>
<p>A basic implementation for it is:</p>
<ol type="1">
<li><p>Construct a SQL query to select cohort_definition_id, subject_id, and cohort_start_date from a specified table, filtering by cohort_id.</p></li>
<li><p>The SQL query construction and execution was done using the <a href="https://mechanicalrabbit.github.io/FunSQL.jl/stable/">FunSQL.jl</a> library, in the below-shown manner:</p></li>
</ol>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb2-1">sql <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">From</span>(tab) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-2">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Where</span>(Fun.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">in</span>(Get.cohort_definition_id, cohort_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">...</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-3">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Select</span>(Get.cohort_definition_id, Get.subject_id, Get.cohort_start_date) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-4">            q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">render</span>(q, dialect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dialect)</span></code></pre></div>
<ol start="3" type="1">
<li><p>Executes the constructed SQL query using a database connection, fetching the results into a data frame.</p></li>
<li><p>If the DataFrame is not empty, convert cohort_start_date to DateTime and subtract date_prior from each date, then return the modified DataFrame.</p></li>
</ol>
<p>This was then be called this:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">period_prior_to_index</span>(</span>
<span id="cb3-2">        cohort_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb3-3">        conn; </span>
<span id="cb3-4">        date_prior <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Day</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>), </span>
<span id="cb3-5">        tab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cohort</span>
<span id="cb3-6">    )</span></code></pre></div>
</section>
<section id="filters-applied" class="level2">
<h2 class="anchored" data-anchor-id="filters-applied">5. Filters Applied</h2>
<p>After this, we where needed to get the patient’s database filtered more finely so that there are minimal variations that can be ignored. The duration of the above extracted event eras may vary a lot and it can be preferable to limit to only treatments exceeding a minimum duration. Hence, minEraDuration speciﬁes the minimum time an event era should last to be included in the analysis. All these implementations were more of Dataframe manipulation where I used <a href="https://dataframes.juliadata.org/stable/">DataFrames.jl</a> package.</p>
<p>After that proper testing and documentation are also added.</p>
<p>A basic implementation for the minEraDuration is: It filters the treatment history <code>DataFrame</code> to retain only those rows where the duration between <code>drug_exposure_end</code> and <code>drug_exposure_start</code> is at least <code>minEraDuration</code>. This function can be used as follows:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: false </span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calculate_era_duration</span>(test_df, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">920000</span>)</span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#= ... =#</span></span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">×</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> DataFrame</span>
<span id="cb4-8"> Row │ person_id  drug_exposure_start  drug_exposure_end </span>
<span id="cb4-9">     │ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Int64</span>      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Float64</span>              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Int64</span>             </span>
<span id="cb4-10">─────┼───────────────────────────────────────────────────</span>
<span id="cb4-11">   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> │         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.7273e8</span>          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">364953600</span></span>
<span id="cb4-12">   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> │         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.90304e7</span>           <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">31449600</span></span>
<span id="cb4-13">   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> │         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.18208e7</span>          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">80006400</span></span>
<span id="cb4-14">   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> │         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.32918e9</span>         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1330387200</span></span></code></pre></div>
<p>Another filter we worked on is the EraCollapse. So, let’s suppose a case where an individual receives the same treatment for a long period of time (e.g.&nbsp;need for chronic treatment). Then it’s highly likely that the person would require refills. Now as patients are not 100% adherent, there might be a gap between two subsequent event eras. Usually, these eras are still considered as one treatment episode, and the eraCollapseSize deals with the maximum gap within which two eras of the same event cohort would be collapsed into one era (i.e.&nbsp;seen as a continuous treatment instead of a stop and re-initiation of the same treatment). After that proper testing and documentation are also added.</p>
<p>A basic implementation for the eraCollapseSize is: (a) Sorts the data frame by event_start_date and event_end_date. (b) Calculates the gap between each era and the previous era. (c) Filters out rows with gap_same &gt; eraCollapseSize.</p>
<p>These functions can be used as follows:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: false </span></span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#= ... =#</span></span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">EraCollapse</span>(treatment_history <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_df, eraCollapseSize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">400000000</span>)</span>
<span id="cb5-6"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">×</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> DataFrame</span>
<span id="cb5-7"> Row │ person_id  drug_exposure_start  drug_exposure_end  gap_same   </span>
<span id="cb5-8">     │ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Int64</span>      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Float64</span>              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Int64</span>              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">Float64</span>    </span>
<span id="cb5-9">─────┼───────────────────────────────────────────────────────────────</span>
<span id="cb5-10">   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> │         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.33347e8</span>         <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">532483200</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.86373e9</span></span>
<span id="cb5-11">   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> │         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.7273e8</span>          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">364953600</span>   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.59754e8</span></span>
<span id="cb5-12">   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> │         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>           <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.18208e7</span>          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">80006400</span>   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.83133e8</span></span>
<span id="cb5-13">   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> │         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>            <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.90304e7</span>           <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">31449600</span>   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.09037e8</span></span></code></pre></div>
</section>
<section id="treatment-history-of-the-patients" class="level2">
<h2 class="anchored" data-anchor-id="treatment-history-of-the-patients">6. Treatment History of the Patients</h2>
<p>The <code>create_treatment_history</code> function constructs a detailed treatment history for patients in a target cohort by processing and filtering event cohort data from a given DataFrame. It begins by isolating the target cohort based on its <code>cohort_id</code>, adding a new column for the <code>index_year</code> derived from the cohort’s start date. Then, it selects relevant event cohorts based on a provided list of cohort IDs and merges them with the target cohort on the <code>subject_id</code> to associate events with individuals in the target group. The function applies different filtering criteria depending on whether the user is interested in treatments starting or ending within a specified period before the target cohort’s start date (defined by <code>periodPriorToIndex</code>). It keeps only the event cohorts that match the filtering condition, ensuring that only relevant treatments are considered. After filtering, the function calculates time gaps between consecutive cohort events for each patient, adding these gaps to the DataFrame. The final DataFrame provides a history of treatments, including the dates of events and the time intervals between them, offering a clear timeline of treatment for each patient. After that proper testing and documentation are also added.</p>
</section>
<section id="combinationwindow-functionality-to-combine-overlapping-treatments" class="level2">
<h2 class="anchored" data-anchor-id="combinationwindow-functionality-to-combine-overlapping-treatments">7. CombinationWindow Functionality To Combine Overlapping Treatments</h2>
<p>Now once we have the filtering of the treatments done, we need to combine the overlapping treatments based on some set of rules. The combinationWindow specifies the time that two event eras need to overlap to be considered a combination treatment. If there are more than two overlapping event eras, we sequentially combine treatments, starting from the ﬁrst two overlapping event eras.</p>
<p>The <code>combination_Window</code> function processes a patient’s treatment history by identifying overlapping treatment events and combining them into continuous treatment periods based on certain rules. It first converts <code>event_cohort_id</code> into strings and sorts the treatment data by <code>person_id</code>, <code>event_start_date</code>, and <code>event_end_date</code>. The helper function <code>selectRowsCombinationWindow</code> calculates gaps between consecutive treatments, marking rows where treatments overlap or occur too closely. In the main loop, the function checks these overlaps and gaps against a specified <code>combinationWindow</code>. If treatments overlap (or nearly overlap), the function adjusts the treatment periods by either merging adjacent rows or splitting rows to create continuous treatment periods. The process continues until all overlapping treatments are combined into one, creating an updated and accurate treatment history. The function ensures the final output reflects realistic treatment windows by handling special cases where gaps between treatments are smaller than the treatment durations themselves.</p>
<p>It mainly covers the three cases mentioned in the R-research paper:</p>
<section id="switch-case" class="level3">
<h3 class="anchored" data-anchor-id="switch-case">Switch Case:</h3>
<p><em>Condition</em>: If the gap between the two treatment events is smaller than the combinationWindow, but the gap is not equal to the duration of either event. <em>Action</em>: The event_end_date of the previous treatment is set to the event_start_date of the current treatment. This effectively “shifts” the previous treatment’s end date to eliminate the gap, merging the treatments into one continuous period. <em>Purpose</em>: This ensures that treatment gaps that are too small (less than combinationWindow) are treated as part of the same treatment window.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: false </span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#= ... =#</span></span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>gap_previous <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> combinationWindow <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> !(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>gap_previous <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [duration_era, prev_duration_era])</span>
<span id="cb6-6">    treatment_history[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>event_end_date] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> treatment_history[i, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>event_start_date]</span></code></pre></div>
<p>Here is the pictorial representation for the same: <img src="https://juliahealth.org/JuliaHealthBlog/posts/google-summer-of-code-fellows/case1.png" class="img-fluid"></p>
</section>
<section id="frfs-first-row-first-shortened" class="level3">
<h3 class="anchored" data-anchor-id="frfs-first-row-first-shortened">FRFS (First Row, First Shortened):</h3>
<p><em>Condition</em>: If the gap is larger than or equal to the combinationWindow, or the gap equals the duration of one of the two treatments, and the first treatment ends before or on the same date as the second treatment. <em>Action</em>: A new row is created where the second treatment’s event_end_date is set to the end date of the first treatment. This preserves the overlap but ensures that the earlier treatment period stays intact. <em>Purpose</em>: This prevents unnecessary truncation of the first treatment if it spans the entire overlap window.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: false </span></span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#= ... =#</span></span>
<span id="cb7-4"></span>
<span id="cb7-5">elseif <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>gap_previous <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> combinationWindow <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>gap_previous <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [duration_era, prev_duration_era]</span>
<span id="cb7-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> treatment_history[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>event_end_date] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> treatment_history[i, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>event_end_date]</span>
<span id="cb7-7">        new_row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">deepcopy</span>(treatment_history[i, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>])</span>
<span id="cb7-8">        new_row.event_end_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> treatment_history[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>event_end_date]</span>
<span id="cb7-9">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append!</span>(treatment_history, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DataFrame</span>(new_row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'</span>))</span></code></pre></div>
<p>Here is the pictorial representation for the same: <img src="https://juliahealth.org/JuliaHealthBlog/posts/google-summer-of-code-fellows/case2.png" class="img-fluid"></p>
</section>
<section id="lrfs-last-row-first-shortened" class="level3">
<h3 class="anchored" data-anchor-id="lrfs-last-row-first-shortened">LRFS (Last Row, First Shortened):</h3>
<p><em>Condition</em>: If the gap is larger than or equal to the combinationWindow, or the gap equals the duration of one of the treatments, and the first treatment ends after the second treatment. <em>Action</em>: The current treatment’s event_end_date is adjusted to match the event_end_date of the previous treatment. <em>Purpose</em>: This handles cases where the second treatment’s window should be shortened to prevent overlap with the previous treatment, merging them into a single continuous window.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: false </span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#= ... =#</span></span>
<span id="cb8-4"></span>
<span id="cb8-5">else</span>
<span id="cb8-6">    treatment_history[i, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>event_end_date] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> treatment_history[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>event_end_date]</span></code></pre></div>
<p>Here is the pictorial representation for the same: <img src="https://juliahealth.org/JuliaHealthBlog/posts/google-summer-of-code-fellows/case3.png" class="img-fluid"></p>
<blockquote class="blockquote">
<p><em>Note:</em> However, There are a few things left to cover here, most of which are the documentation and writing the test suite for the same.</p>
</blockquote>
</section>
</section>
</section>
<section id="contributions-beyond-coding" class="level1">
<h1>Contributions Beyond Coding</h1>
<section id="organizing-meetings-and-communication" class="level2">
<h2 class="anchored" data-anchor-id="organizing-meetings-and-communication">1. Organizing Meetings and Communication</h2>
<p>Throughout the project, I regularly met with my mentor, [Jacob Zelko], and co-mentor, [Mounika], via weekly Zoom calls to discuss progress and seek guidance. During these meetings, we reviewed my work, identified areas where I needed help, and set clear goals for the upcoming weeks. We used Trello to organize and track these goals, ensuring that nothing was overlooked. My mentors provided detailed insights into specific technical aspects and guided me through the logic behind various functions. Outside of our scheduled meetings, they were always available for quick queries via Slack, ensuring constant support.</p>
</section>
<section id="personal-documentation" class="level2">
<h2 class="anchored" data-anchor-id="personal-documentation">2. Personal Documentation</h2>
<p>In addition to the notes from our meetings, I maintained personal documentation where I recorded every step I took, including the challenges I faced and the mistakes I made. This helped me reflect on my progress and stay organized throughout the fellowship. Following my selection for GSoC 2024, I also published a blog post on <a href="https://medium.com/@landgejay124/gsoc-24-the-julia-language-62b809bbec49">Medium</a> to share my journey and experiences with the Julia Language community.</p>
</section>
<section id="contributions-to-the-rest-of-the-juliahealth-repositories" class="level2">
<h2 class="anchored" data-anchor-id="contributions-to-the-rest-of-the-juliahealth-repositories">3. Contributions To the Rest of the JuliaHealth Repositories</h2>
<p>Earlier I have contributed a lot to the <a href="https://github.com/JuliaHealth/OMOPCDMCohortCreator.jl">OMOPCDMCohortCreator.jl</a> including adding new functionalities writing test suites, adding blogs including - <a href="https://github.com/JuliaHealth/juliahealth.github.io/pull/124">Patient Pathways within JuliaHealth</a>. Apart from that I also initiated 3 new releases of this package.</p>
</section>
</section>
<section id="conclusions-and-future-development" class="level1">
<h1>Conclusions and Future Development</h1>
<p>This project was a 350-hour large project since there were many goals to accomplish. Here is what we accomplished:</p>
<ol type="1">
<li><p>Built a new repository in JuliaHealth land dedicated especially to treatment pathways synthesis.</p></li>
<li><p>CI/CD for the Package and Documentation hosting.</p></li>
<li><p>All required basic functionalities required to build the pathways.</p></li>
<li><p>Documentation and test suites added for each.</p></li>
</ol>
<p>Future work would include:</p>
<ul>
<li><p>Finish this <a href="https://github.com/JuliaHealth/OMOPCDMPathways.jl/pull/63">PR</a> test-suites and documentation are remaining for this PR.</p></li>
<li><p>Apart from that, we would need to add a <a href="https://github.com/JuliaHealth/OMOPCDMPathways.jl/issues/9">function</a> that sews up all the functionalities of the package so that the user can run the complete pathways analysis by running just one function instead of running each of the functions manually.</p></li>
<li><p>Also, in the future, we would explore what statistical functionalities we would need to further explore pathways.</p></li>
<li><p>Then, we could explore how to compose JuliaHealth with packages from ecosystems like <a href="https://juliastats.org/">JuliaStats</a> and <a href="https://docs.juliadsp.org/stable/contents/">JuliaDSP</a> (for time series analysis) that are mentioned in this <a href="https://github.com/JuliaHealth/OMOPCDMPathways.jl/issues/8">PR</a>.</p></li>
<li><p>And finally work on creating novel visualizations for the Pathways. Commonly used visualizations for treatment pathways (such as sunburst or icicle plots) showing which patients fall under what treatment pathways could be developed as plotting recipes to visualize various aspects of a patient’s care pathway rapidly.</p></li>
</ul>
</section>
<section id="acknowledgements" class="level1">
<h1>Acknowledgements 🙇‍♂️</h1>
<ol type="1">
<li><p><a href="https://jacobzelko.com">Jacob S. Zelko</a>: aka, <a href="https://github.com/TheCedarPrince">TheCedarPrince</a></p></li>
<li><p>Mounika Thakkallapally</p></li>
</ol>
<p>Thank you for your continuous help and support throughout the fellowship. <em>Note: This blog post was also written with the assistance of LLM technologies to help with grammar, flow, and spelling!</em></p>


<!-- -->


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body" data-entry-spacing="0">
<div id="ref-markus2022treatmentpatterns" class="csl-entry">
<div class="csl-left-margin">[1] </div><div class="csl-right-inline">A. F. Markus, K. M. Verhamme, J. A. Kors, and P. R. Rijnbeek, <span>“TreatmentPatterns: An r package to facilitate the standardized development and analysis of treatment patterns across disease domains,”</span> <em>Computer Methods and Programs in Biomedicine</em>, vol. 225, p. 107081, 2022.</div>
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{sanjay_landge2024,
  author = {Sanjay Landge, Jay},
  title = {GSoC ’24: {Developing} {Tooling} for {Observational} {Health}
    {Research} in {Julia}},
  date = {2024-09-07},
  url = {https://juliahealth.org/JuliaHealthBlog/posts/google-summer-of-code-fellows/gsoc-2024-fellows.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-sanjay_landge2024" class="csl-entry quarto-appendix-citeas">
<div class="">J.
Sanjay Landge, <span>“GSoC ’24: Developing Tooling for Observational
Health Research in Julia,”</span> Sep. 07, 2024. Available: <a href="https://juliahealth.org/JuliaHealthBlog/posts/google-summer-of-code-fellows/gsoc-2024-fellows.html">https://juliahealth.org/JuliaHealthBlog/posts/google-summer-of-code-fellows/gsoc-2024-fellows.html</a></div>
</div></div></section></div> ]]></description>
  <category>gsoc</category>
  <category>sql</category>
  <category>observational health</category>
  <category>analysis</category>
  <guid>https://juliahealth.org/JuliaHealthBlog/posts/google-summer-of-code-fellows/gsoc-2024-fellows.html</guid>
  <pubDate>Sat, 07 Sep 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Dummy Post</title>
  <dc:creator>Foobar </dc:creator>
  <link>https://juliahealth.org/JuliaHealthBlog/posts/dummy/</link>
  <description><![CDATA[ 




<section id="seciton-1" class="level1">
<h1>Seciton 1</h1>
<p>Small dummy blog post</p>
<div id="53431042" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb1-1"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="19">
<pre><code>4</code></pre>
</div>
</div>
<div id="1662c2c2" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">println</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>4</code></pre>
</div>
</div>
</section>
<section id="section-2" class="level1">
<h1>Section 2</h1>
</section>
<section id="section-3" class="level1">
<h1>Section 3</h1>


<!-- -->

</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{2024,
  author = {, Foobar},
  title = {Dummy {Post}},
  date = {2024-06-22},
  url = {https://juliahealth.org/JuliaHealthBlog/posts/dummy/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-2024" class="csl-entry quarto-appendix-citeas">
Foobar. 2024. <span>“Dummy Post.”</span> June 22, 2024. <a href="https://juliahealth.org/JuliaHealthBlog/posts/dummy/">https://juliahealth.org/JuliaHealthBlog/posts/dummy/</a>.
</div></div></section></div> ]]></description>
  <category>news</category>
  <category>code</category>
  <category>analysis</category>
  <guid>https://juliahealth.org/JuliaHealthBlog/posts/dummy/</guid>
  <pubDate>Sat, 22 Jun 2024 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
